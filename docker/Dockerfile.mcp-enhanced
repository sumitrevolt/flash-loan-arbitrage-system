# Enhanced Dockerfile for All MCP Servers with Dynamic Configuration
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    pydantic==2.5.0 \
    redis==5.0.1 \
    psycopg2-binary==2.9.9 \
    asyncio-mqtt==0.13.0 \
    websockets==12.0 \
    aiohttp==3.9.1 \
    requests==2.31.0 \
    numpy==1.24.3 \
    pandas==2.0.3 \
    web3==6.15.1 \
    "langchain>=0.1.5,<0.2.0" \
    "langchain-community>=0.0.13,<0.1.0" \
    "langchain-core>=0.1.12,<0.2.0" \
    "langchain-experimental>=0.0.50,<0.1.0" \
    python-dotenv==1.0.0 \
    httpx==0.26.0 \
    aiodns==3.1.1 \
    aiofiles==23.2.1

# Copy configuration and application code
COPY unified_mcp_config.json /app/unified_mcp_config.json
COPY docker/entrypoints/enhanced_mcp_server_entrypoint.py /app/entrypoint.py
COPY mcp_servers/ /app/mcp_servers/
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/temp

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV MCP_SERVER_HOST=0.0.0.0
ENV LOG_LEVEL=INFO

# Health check - uses environment PORT variable
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Expose port (will be set by environment)
EXPOSE ${PORT:-8000}

# Run the enhanced entrypoint
CMD ["python", "/app/entrypoint.py"]
