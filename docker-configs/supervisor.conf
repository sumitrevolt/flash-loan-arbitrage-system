[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
user=root

[program:redis]
command=redis-server /etc/redis/redis.conf
autostart=true
autorestart=true
user=redis
stdout_logfile=/var/log/supervisor/redis.log
stderr_logfile=/var/log/supervisor/redis.log

[program:langchain-orchestrator]
command=/opt/venv/bin/python enhanced_langchain_orchestrator.py
directory=/app
autostart=true
autorestart=true
user=appuser
stdout_logfile=/var/log/supervisor/orchestrator.log
stderr_logfile=/var/log/supervisor/orchestrator.log
environment=PYTHONPATH="/app",PYTHONUNBUFFERED="1"

[program:nginx]
command=nginx -g "daemon off;"
autostart=true
autorestart=true
user=root
stdout_logfile=/var/log/supervisor/nginx.log
stderr_logfile=/var/log/supervisor/nginx.log

[program:health-monitor]
command=/opt/venv/bin/python -c "
import asyncio
import aiohttp
import time
import logging

async def health_check():
    while True:
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get('http://localhost:8000/health') as resp:
                    if resp.status == 200:
                        logging.info('Health check passed')
                    else:
                        logging.warning(f'Health check failed with status {resp.status}')
        except Exception as e:
            logging.error(f'Health check error: {e}')
        await asyncio.sleep(30)

asyncio.run(health_check())
"
directory=/app
autostart=true
autorestart=true
user=appuser
stdout_logfile=/var/log/supervisor/health.log
stderr_logfile=/var/log/supervisor/health.log
